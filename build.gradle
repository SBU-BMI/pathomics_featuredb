/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.3/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'application'

def OpenCV = System.getenv("OPENCV_DIR")
def OpenCVJava = System.getenv("OPENCV_JAVA_LIB")

mainClassName   = 'u24.mongodb.nuclear.segmentation.loader.FeatureDBLoader'
applicationName = 'featuredb-loader'

version = '1.3'
jar {
    baseName = 'mongodb-loader'
    manifest {
        attributes 'Implementation-Title': 'MongoDB Loader v1.3',
                'Implementation-Version': version
        attributes 'Main-Class': 'u24.mongodb.nuclear.segmentation.loader.FeatureDBLoader'
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

compileJava {
    options.compilerArgs << '-Xlint:all'
}

repositories {
    mavenCentral()
    maven { url 'https://artifacts.unidata.ucar.edu/content/repositories/unidata-releases/' }
    maven { url 'http://artifacts.openmicroscopy.org/artifactory/maven/' }
}

dependencies {
    compile 'org.mongodb:mongodb-driver:3.4.2'
    compile 'commons-cli:commons-cli:1.3.1'
    compile 'org.apache.httpcomponents:httpclient:4.5'
    compile 'commons-io:commons-io:2.4'
    compile 'com.vividsolutions:jts:1.13'
	// compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.23'
	compile group: 'org.slf4j', name: 'slf4j-nop', version: '1.7.23'
    compile(group: 'ome', name: 'formats-gpl', version: '5.1.3')

    // compile files(OpenCVJava)
    compile files('/Users/tkurc/kurcpc/Local/programs/opencv-java/opencv-300.jar')
        
    // The production code uses Guava
    compile 'com.google.guava:guava:20.0'
}
